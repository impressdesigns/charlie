name: "Java CI with Gradle"

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      # Qodana adding checks
      checks: write
      pull-requests: write
      # Qodana uploading SARIF
      security-events: write

    steps:
      - name: "Checkout repository"
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: "Set up JDK"
        uses: actions/setup-java@0ab4596768b603586c0de567f2430c30f5b0d2b0 # v3.13.0
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@842c587ad8aa4c68eeba24c396e15af4c2e9f30a # v2.9.0

      - name: "Gradle build"
        run: ./gradlew build
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

        # "Make sure the `assemble` task is executed."
        # - https://docs.sentry.io/platforms/java/source-context/
      - name: "Gradle assemble"
        run: ./gradlew assemble
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: "Gradle test"
        run: ./gradlew test
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

      - name: "Generate Kover report"
        run: ./gradlew koverXmlReport

      - name: "Upload coverage reports to Codecov"
        uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: "Create coverage-data directory and copy contents"
        run: |
          mkdir -p .qodana/code-coverage
          cp -R build/kover/bin-reports/* .qodana/code-coverage/

      - name: "Upload coverage data"
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: gradle-coverage-data.zip
          path: .qodana/code-coverage

      - name: "Qodana Scan"
        uses: JetBrains/qodana-action@95ecb19ba27e308153723e54a790e4ad908b13a0 # v2023.2.8
        with:
          pr-mode: false
          args: -jvm-target,21
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

      - name: "Upload Qodana SARIF to CodeQL"
        uses: github/codeql-action/upload-sarif@4b6aa0b07da05d6e43d0e5f9c8596a6532ce1c85 # codeql-bundle-v2.15.3
        with:
          sarif_file: ${{ runner.temp }}/qodana/results/qodana.sarif.json
